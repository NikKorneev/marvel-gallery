{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/searchForm/SearchForm.js","components/skeleton/Skeleton.js","utils/setContent.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","objectFit","_jsxs","className","children","_jsx","src","alt","style","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","itemRefs","useRef","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","TransitionGroup","i","CSSTransition","classNames","timeout","tabIndex","onCharSelected","current","forEach","item","classList","remove","add","focus","ref","el","indexOf","renderList","disabled","display","GoToPage","link","replace","Link","to","SearchForm","setContent","Formik","initialValues","validationSchema","Yup","required","onSubmit","values","setSubmitting","isSubmitting","Form","Field","type","component","Skeleton","_Fragment","Component","arr","push","resourceURI","match","checkArr","CharInfo","prevProps","charId","MainPage","selectedChar","Helmet","ErrorBoundary","decoration"],"mappings":"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","file":"static/js/6.64c022ac.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError, process, setProcess } =\r\n\t\tuseHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\t// ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n\tconst _apiKey = \"apikey=681bf7ca5ce7abe51723e4d42426db24\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?name=${name}&${_apiKey}`\r\n\t\t);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn _transformCharacter(res.data.results[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} pages`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState(\"waiting\");\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = \"GET\",\r\n\t\t\tbody = null,\r\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\r\n\t\t) => {\r\n\t\t\tsetProcess(\"loading\");\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetProcess(\"error\");\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null);\r\n\t\tsetProcess(\"waiting\");\r\n\t}, []);\r\n\r\n\treturn { loading, request, error, clearError, process, setProcess };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 60000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId);\n\t\t};\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt=\"mjolnir\"\n\t\t\t\t\tclassName=\"randomchar__decoration\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (\n\t\tthumbnail ===\n\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t) {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"./charList.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters, process, setProcess } =\n\t\tuseMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst itemRefs = useRef([]);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t\t\t.then(() => setProcess(\"confirmed\"));\n\t};\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset((offset) => offset + 9);\n\t\tsetCharEnded(ended);\n\t};\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach((item) => {\n\t\t\titem.classList.remove(\"char__item_selected\");\n\t\t});\n\t\titemRefs.current[id].classList.add(\"char__item_selected\");\n\t\titemRefs.current[id].focus();\n\t};\n\n\tconst renderList = (charList) => {\n\t\tconst rendered = charList.map((char, i) => {\n\t\t\treturn (\n\t\t\t\t<CSSTransition classNames=\"character\" timeout={i * 600} key={i}>\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(char.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={char.thumbnail}\n\t\t\t\t\t\t\talt={\"Image of\" + char.name}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\tchar.thumbnail.indexOf(\"image_not_available\") >\n\t\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t\t\t\t? { objectFit: \"unset\" }\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"char__name\">{char.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn rendered;\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{spinner}\n\t\t\t{errorMessage}\n\t\t\t<ul>\n\t\t\t\t<TransitionGroup className=\"char__grid\">\n\t\t\t\t\t{renderList(charList)}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t\tstyle={{ display: charEnded ? \"none\" : \"block\" }}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport \"./searchForm.scss\";\r\n\r\nconst SearchForm = () => {\r\n\tconst { getCharacterByName } = useMarvelService();\r\n\tconst [content, setContent] = useState();\r\n\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<h2>Or find a character by name:</h2>\r\n\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ name: \"\" }}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tname: Yup.string().required(\"This field is required\"),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={async (values, { setSubmitting }) => {\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\tawait getCharacterByName(values.name).then((res) => {\r\n\t\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\t\tsetContent(<GoToPage name={values.name} />);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetContent(\r\n\t\t\t\t\t\t\t\t<p className=\"search__error\">\r\n\t\t\t\t\t\t\t\t\t{`${values.name} character was not found`}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t\t<Form className=\"search__form\">\r\n\t\t\t\t\t\t<div className=\"search__wrapper\">\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tclassName=\"search__input\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"inner\">FIND</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\tclassName=\"search__error\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst GoToPage = ({ name }) => {\r\n\tconst link = name.replace(/\\s/, \"%20\");\r\n\treturn (\r\n\t\t<div className=\"search__toPage\">\r\n\t\t\t<p>{`There is! Visit ${name} page?`}</p>\r\n\t\t\t<Link\r\n\t\t\t\tto={`/comics/${link}`}\r\n\t\t\t\tclassName=\"search__toPageBtn button button__main button__long\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"inner\">TO PAGE</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchForm;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase \"waiting\":\r\n\t\t\treturn <Skeleton />;\r\n\t\tcase \"loading\":\r\n\t\t\treturn <Spinner />;\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn <Component data={data} />;\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMessage />;\r\n\t\tdefault:\r\n\t\t\treturn <Skeleton />;\r\n\t}\r\n};\r\n\r\nexport default setContent;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport setContent from \"../../utils/setContent\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { getCharacter, clearError, process, setProcess } =\n\t\tuseMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\tconst prevProps = useRef(props);\n\n\tuseEffect(() => {\n\t\tif (props.charId !== prevProps.charId) {\n\t\t\tupdateChar();\n\t\t}\n\t}, [props]);\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess(\"confirmed\"));\n\t};\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\treturn (\n\t\t<div className=\"char__params\">\n\t\t\t<div className=\"char__info\">{setContent(process, View, char)}</div>\n\t\t\t<SearchForm />\n\t\t</div>\n\t);\n};\n\nconst View = ({ data }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = data;\n\tconst arr = [];\n\n\tconst checkArr = (comics) => {\n\t\tif (comics.length === 0) {\n\t\t\tarr.push(\"No comics were found about this character.\");\n\t\t} else {\n\t\t\tfor (let i = 0; i < comics.length; i++) {\n\t\t\t\tif (i > 9) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tarr.push(\n\t\t\t\t\t\t<li className=\"char__comics-item\" key={i}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={`${comics[i].resourceURI.match(\n\t\t\t\t\t\t\t\t\t/comics\\/\\d+/gi\n\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{comics[i].name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcheckArr(comics);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={thumbnail}\n\t\t\t\t\talt={name}\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthumbnail.indexOf(\"image_not_available\") > -1\n\t\t\t\t\t\t\t? { objectFit: \"unset\" }\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">{arr}</ul>\n\t\t</>\n\t);\n};\n\n//проверка типов\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name=\"description\" content=\"Marvel information portal\" />\r\n\t\t\t\t<title>Marvel information - characters</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<RandomChar />\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}