{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/comics/Comics.js","resources/img/Avengers_logo.png","resources/img/Avengers.png","components/comics/ComicsHeader.js","components/pages/ComicsPage.js"],"names":["useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Comics","newComicsLoading","setNewComicsLoading","comicsList","setComicsList","setOffset","_useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","comicsLoaded","_toConsumableArray","_jsxs","_Fragment","children","_jsx","Spinner","TransitionGroup","className","item","i","CSSTransition","classNames","timeout","tabIndex","Link","end","to","src","alt","style","indexOf","objectFit","renderList","disabled","onClick","ComicsHeader","avengersLogo","avengers","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/7.811a9d76.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError, process, setProcess } =\r\n\t\tuseHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\t// ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n\tconst _apiKey = \"apikey=681bf7ca5ce7abe51723e4d42426db24\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?name=${name}&${_apiKey}`\r\n\t\t);\r\n\t\tif (res.data.results.length > 0) {\r\n\t\t\treturn _transformCharacter(res.data.results[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} pages`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState(\"waiting\");\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (\r\n\t\t\turl,\r\n\t\t\tmethod = \"GET\",\r\n\t\t\tbody = null,\r\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\r\n\t\t) => {\r\n\t\t\tsetProcess(\"loading\");\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetProcess(\"error\");\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null);\r\n\t\tsetProcess(\"waiting\");\r\n\t}, []);\r\n\r\n\treturn { loading, request, error, clearError, process, setProcess };\r\n};\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport \"./comicsPage.scss\";\r\n\r\nconst Comics = () => {\r\n\tconst [newComicsLoading, setNewComicsLoading] = useState(false);\r\n\tconst [comicsList, setComicsList] = useState([]);\r\n\tconst [offset, setOffset] = useState(210);\r\n\tconst { getAllComics, loading, error } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t}, []);\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewComicsLoading(false) : setNewComicsLoading(true);\r\n\t\tgetAllComics(offset).then(onComicsLoaded);\r\n\t};\r\n\r\n\tconst onComicsLoaded = (comicsLoaded) => {\r\n\t\tsetOffset((offset) => offset + 9);\r\n\t\tsetComicsList((comicsList) => [...comicsList, ...comicsLoaded]);\r\n\t\tsetNewComicsLoading(false);\r\n\t};\r\n\r\n\tconst renderList = (comicsList) => {\r\n\t\treturn comicsList.map((item, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CSSTransition classNames=\"comics\" timeout={i * 600} key={i}>\r\n\t\t\t\t\t<li className=\"comics__item\" tabIndex={0}>\r\n\t\t\t\t\t\t<Link end to={`/comics/${item.id}`}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={item.thumbnail}\r\n\t\t\t\t\t\t\t\talt={\"Image of\" + item.name}\r\n\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\titem.thumbnail.indexOf(\r\n\t\t\t\t\t\t\t\t\t\t\"image_not_available\"\r\n\t\t\t\t\t\t\t\t\t) > -1\r\n\t\t\t\t\t\t\t\t\t\t? { objectFit: \"contain\" }\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"comics__title\">{item.title}</div>\r\n\t\t\t\t\t\t\t<div className=\"comics__price\">{item.price}</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && !newComicsLoading ? <Spinner /> : null}\r\n\t\t\t<ul>\r\n\t\t\t\t<TransitionGroup className=\"comics\">\r\n\t\t\t\t\t{renderList(comicsList)}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t</ul>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\tdisabled={newComicsLoading}\r\n\t\t\t\tonClick={() => onRequest(offset)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Comics;\r\n","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","import \"./comicsPage.scss\";\r\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\n\r\nconst ComicsHeader = () => {\r\n\treturn (\r\n\t\t<div className=\"comics__header\">\r\n\t\t\t<img src={avengersLogo} alt=\"marvel\" />\r\n\t\t\t<p>\r\n\t\t\t\tNew comics every week! <br /> Stay tuned!\r\n\t\t\t</p>\r\n\t\t\t<img src={avengers} alt=\"avengers\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComicsHeader;\r\n","import Comics from \"../comics/Comics\";\r\nimport ComicsHeader from \"../comics/ComicsHeader\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Marvel information - comics</title>\r\n\t\t\t\t<meta name=\"description\" content=\"comics page\"></meta>\r\n\t\t\t</Helmet>\r\n\t\t\t<ComicsHeader />\r\n\t\t\t<Comics />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}